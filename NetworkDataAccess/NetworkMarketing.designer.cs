#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetworkDataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NetworkMaketing")]
	public partial class NetworkMarketingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClassUser(ClassUser instance);
    partial void UpdateClassUser(ClassUser instance);
    partial void DeleteClassUser(ClassUser instance);
    partial void InsertEVoucher(EVoucher instance);
    partial void UpdateEVoucher(EVoucher instance);
    partial void DeleteEVoucher(EVoucher instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertBankDetail(BankDetail instance);
    partial void UpdateBankDetail(BankDetail instance);
    partial void DeleteBankDetail(BankDetail instance);
    partial void InsertLeaderFollower(LeaderFollower instance);
    partial void UpdateLeaderFollower(LeaderFollower instance);
    partial void DeleteLeaderFollower(LeaderFollower instance);
    #endregion
		
		public NetworkMarketingDataContext() : 
				base(global::NetworkDataAccess.Properties.Settings.Default.NetworkMarketingConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public NetworkMarketingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NetworkMarketingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NetworkMarketingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NetworkMarketingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ClassUser> ClassUsers
		{
			get
			{
				return this.GetTable<ClassUser>();
			}
		}
		
		public System.Data.Linq.Table<EVoucher> EVouchers
		{
			get
			{
				return this.GetTable<EVoucher>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<BankDetail> BankDetails
		{
			get
			{
				return this.GetTable<BankDetail>();
			}
		}
		
		public System.Data.Linq.Table<LeaderFollower> LeaderFollowers
		{
			get
			{
				return this.GetTable<LeaderFollower>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Get_User_points")]
		public int usp_Get_User_points([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Points", DbType="Float")] ref System.Nullable<double> points)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, points);
			points = ((System.Nullable<double>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Add_New_Transaction")]
		public int usp_Add_New_Transaction([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecUserName", DbType="VarChar(50)")] string recUserName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Float")] System.Nullable<double> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(50)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionDate", DbType="DateTime")] System.Nullable<System.DateTime> transactionDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionType", DbType="VarChar(10)")] string transactionType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, recUserName, amount, description, transactionDate, transactionType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Get_User_List_Order_By_Performance_For_Class")]
		public ISingleResult<usp_Get_User_List_Order_By_Performance_For_ClassResult> usp_Get_User_List_Order_By_Performance_For_Class([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classID);
			return ((ISingleResult<usp_Get_User_List_Order_By_Performance_For_ClassResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Get_All_Evoucher_Details")]
		public ISingleResult<usp_Get_All_Evoucher_DetailsResult> usp_Get_All_Evoucher_Details([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VoucherCode", DbType="VarChar(50)")] string voucherCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), voucherCode, userID);
			return ((ISingleResult<usp_Get_All_Evoucher_DetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.uspGet_All_TransActionsByUser")]
		public ISingleResult<uspGet_All_TransActionsByUserResult> uspGet_All_TransActionsByUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<uspGet_All_TransActionsByUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Get_Evoucher_Details")]
		public ISingleResult<usp_Get_Evoucher_DetailsResult> usp_Get_Evoucher_Details([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VoucherCode", DbType="VarChar(50)")] string voucherCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), voucherCode, userID);
			return ((ISingleResult<usp_Get_Evoucher_DetailsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassUser")]
	public partial class ClassUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassUserID;
		
		private System.Nullable<int> _Position;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.DateTime> _JoinedDate;
		
		private EntityRef<User> _User;
		
		private EntityRef<Class> _Class;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassUserIDChanging(int value);
    partial void OnClassUserIDChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    partial void OnClassIDChanging(System.Nullable<int> value);
    partial void OnClassIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnJoinedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinedDateChanged();
    #endregion
		
		public ClassUser()
		{
			this._User = default(EntityRef<User>);
			this._Class = default(EntityRef<Class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassUserID
		{
			get
			{
				return this._ClassUserID;
			}
			set
			{
				if ((this._ClassUserID != value))
				{
					this.OnClassUserIDChanging(value);
					this.SendPropertyChanging();
					this._ClassUserID = value;
					this.SendPropertyChanged("ClassUserID");
					this.OnClassUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JoinedDate
		{
			get
			{
				return this._JoinedDate;
			}
			set
			{
				if ((this._JoinedDate != value))
				{
					this.OnJoinedDateChanging(value);
					this.SendPropertyChanging();
					this._JoinedDate = value;
					this.SendPropertyChanged("JoinedDate");
					this.OnJoinedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClassUser", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ClassUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ClassUsers.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassUser", Storage="_Class", ThisKey="ClassID", OtherKey="ClassID", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.ClassUsers.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.ClassUsers.Add(this);
						this._ClassID = value.ClassID;
					}
					else
					{
						this._ClassID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EVouchers")]
	public partial class EVoucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EVouchersID;
		
		private System.Nullable<int> _CreaterID;
		
		private System.Nullable<int> _UsedBy;
		
		private string _VoucherCode;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UsedDate;
		
		private System.Nullable<bool> _IsUsed;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEVouchersIDChanging(int value);
    partial void OnEVouchersIDChanged();
    partial void OnCreaterIDChanging(System.Nullable<int> value);
    partial void OnCreaterIDChanged();
    partial void OnUsedByChanging(System.Nullable<int> value);
    partial void OnUsedByChanged();
    partial void OnVoucherCodeChanging(string value);
    partial void OnVoucherCodeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUsedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUsedDateChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    #endregion
		
		public EVoucher()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EVouchersID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EVouchersID
		{
			get
			{
				return this._EVouchersID;
			}
			set
			{
				if ((this._EVouchersID != value))
				{
					this.OnEVouchersIDChanging(value);
					this.SendPropertyChanging();
					this._EVouchersID = value;
					this.SendPropertyChanged("EVouchersID");
					this.OnEVouchersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreaterID", DbType="Int")]
		public System.Nullable<int> CreaterID
		{
			get
			{
				return this._CreaterID;
			}
			set
			{
				if ((this._CreaterID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreaterIDChanging(value);
					this.SendPropertyChanging();
					this._CreaterID = value;
					this.SendPropertyChanged("CreaterID");
					this.OnCreaterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedBy", DbType="Int")]
		public System.Nullable<int> UsedBy
		{
			get
			{
				return this._UsedBy;
			}
			set
			{
				if ((this._UsedBy != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsedByChanging(value);
					this.SendPropertyChanging();
					this._UsedBy = value;
					this.SendPropertyChanged("UsedBy");
					this.OnUsedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="VarChar(MAX)")]
		public string VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
			set
			{
				if ((this._VoucherCode != value))
				{
					this.OnVoucherCodeChanging(value);
					this.SendPropertyChanging();
					this._VoucherCode = value;
					this.SendPropertyChanged("VoucherCode");
					this.OnVoucherCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UsedDate
		{
			get
			{
				return this._UsedDate;
			}
			set
			{
				if ((this._UsedDate != value))
				{
					this.OnUsedDateChanging(value);
					this.SendPropertyChanging();
					this._UsedDate = value;
					this.SendPropertyChanged("UsedDate");
					this.OnUsedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EVoucher", Storage="_User", ThisKey="CreaterID", OtherKey="UserID", IsForeignKey=true)]
		public User Creator
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.EVouchers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.EVouchers.Add(this);
						this._CreaterID = value.UserID;
					}
					else
					{
						this._CreaterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Creator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EVoucher1", Storage="_User1", ThisKey="UsedBy", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UsedEVouchers.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UsedEVouchers.Add(this);
						this._UsedBy = value.UserID;
					}
					else
					{
						this._UsedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionID;
		
		private System.Nullable<int> _SenderID;
		
		private System.Nullable<int> _RecieverID;
		
		private System.Nullable<double> _Amount;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _TransactionDate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnSenderIDChanging(System.Nullable<int> value);
    partial void OnSenderIDChanged();
    partial void OnRecieverIDChanging(System.Nullable<int> value);
    partial void OnRecieverIDChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransactionDateChanged();
    #endregion
		
		public Transaction()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="Int")]
		public System.Nullable<int> SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieverID", DbType="Int")]
		public System.Nullable<int> RecieverID
		{
			get
			{
				return this._RecieverID;
			}
			set
			{
				if ((this._RecieverID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecieverIDChanging(value);
					this.SendPropertyChanging();
					this._RecieverID = value;
					this.SendPropertyChanged("RecieverID");
					this.OnRecieverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction", Storage="_User", ThisKey="SenderID", OtherKey="UserID", IsForeignKey=true)]
		public User Sender
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SentTransactions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SentTransactions.Add(this);
						this._SenderID = value.UserID;
					}
					else
					{
						this._SenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction1", Storage="_User1", ThisKey="RecieverID", OtherKey="UserID", IsForeignKey=true)]
		public User Reciever
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.RecievedTransactions.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.RecievedTransactions.Add(this);
						this._RecieverID = value.UserID;
					}
					else
					{
						this._RecieverID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Reciever");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _Title;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _Email;
		
		private string _Password;
		
		private string _TransctionKey;
		
		private string _Country;
		
		private string _District;
		
		private string _Mobile;
		
		private string _Telephone;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _SponserID;
		
		private string _ImageExt;
		
		private EntitySet<ClassUser> _ClassUsers;
		
		private EntitySet<EVoucher> _EVouchers;
		
		private EntitySet<EVoucher> _EVouchers1;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<Transaction> _Transactions1;
		
		private EntitySet<User> _Users;
		
		private EntitySet<User> _Users1;
		
		private EntitySet<BankDetail> _BankDetails;
		
		private EntitySet<LeaderFollower> _LeaderFollowers;
		
		private EntitySet<LeaderFollower> _RealFollowers;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTransctionKeyChanging(string value);
    partial void OnTransctionKeyChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnSponserIDChanging(System.Nullable<int> value);
    partial void OnSponserIDChanged();
    partial void OnImageExtChanging(string value);
    partial void OnImageExtChanged();
    #endregion
		
		public User()
		{
			this._ClassUsers = new EntitySet<ClassUser>(new Action<ClassUser>(this.attach_ClassUsers), new Action<ClassUser>(this.detach_ClassUsers));
			this._EVouchers = new EntitySet<EVoucher>(new Action<EVoucher>(this.attach_EVouchers), new Action<EVoucher>(this.detach_EVouchers));
			this._EVouchers1 = new EntitySet<EVoucher>(new Action<EVoucher>(this.attach_EVouchers1), new Action<EVoucher>(this.detach_EVouchers1));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Transactions1 = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions1), new Action<Transaction>(this.detach_Transactions1));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Users1 = new EntitySet<User>(new Action<User>(this.attach_Users1), new Action<User>(this.detach_Users1));
			this._BankDetails = new EntitySet<BankDetail>(new Action<BankDetail>(this.attach_BankDetails), new Action<BankDetail>(this.detach_BankDetails));
			this._LeaderFollowers = new EntitySet<LeaderFollower>(new Action<LeaderFollower>(this.attach_LeaderFollowers), new Action<LeaderFollower>(this.detach_LeaderFollowers));
			this._RealFollowers = new EntitySet<LeaderFollower>(new Action<LeaderFollower>(this.attach_RealFollowers), new Action<LeaderFollower>(this.detach_RealFollowers));
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(500)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(10)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(1000)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(1000)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(1000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(1000)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransctionKey", DbType="VarChar(MAX)")]
		public string TransctionKey
		{
			get
			{
				return this._TransctionKey;
			}
			set
			{
				if ((this._TransctionKey != value))
				{
					this.OnTransctionKeyChanging(value);
					this.SendPropertyChanging();
					this._TransctionKey = value;
					this.SendPropertyChanged("TransctionKey");
					this.OnTransctionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(200)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(200)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponserID", DbType="Int")]
		public System.Nullable<int> SponserID
		{
			get
			{
				return this._SponserID;
			}
			set
			{
				if ((this._SponserID != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSponserIDChanging(value);
					this.SendPropertyChanging();
					this._SponserID = value;
					this.SendPropertyChanged("SponserID");
					this.OnSponserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageExt", DbType="VarChar(50)")]
		public string ImageExt
		{
			get
			{
				return this._ImageExt;
			}
			set
			{
				if ((this._ImageExt != value))
				{
					this.OnImageExtChanging(value);
					this.SendPropertyChanging();
					this._ImageExt = value;
					this.SendPropertyChanged("ImageExt");
					this.OnImageExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClassUser", Storage="_ClassUsers", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<ClassUser> ClassUsers
		{
			get
			{
				return this._ClassUsers;
			}
			set
			{
				this._ClassUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EVoucher", Storage="_EVouchers", ThisKey="UserID", OtherKey="CreaterID")]
		public EntitySet<EVoucher> EVouchers
		{
			get
			{
				return this._EVouchers;
			}
			set
			{
				this._EVouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EVoucher1", Storage="_EVouchers1", ThisKey="UserID", OtherKey="UsedBy")]
		public EntitySet<EVoucher> UsedEVouchers
		{
			get
			{
				return this._EVouchers1;
			}
			set
			{
				this._EVouchers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction", Storage="_Transactions", ThisKey="UserID", OtherKey="SenderID")]
		public EntitySet<Transaction> SentTransactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Transaction1", Storage="_Transactions1", ThisKey="UserID", OtherKey="RecieverID")]
		public EntitySet<Transaction> RecievedTransactions
		{
			get
			{
				return this._Transactions1;
			}
			set
			{
				this._Transactions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_Users", ThisKey="UserID", OtherKey="CreatedBy")]
		public EntitySet<User> Childrens
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User1", Storage="_Users1", ThisKey="UserID", OtherKey="SponserID")]
		public EntitySet<User> Followers
		{
			get
			{
				return this._Users1;
			}
			set
			{
				this._Users1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BankDetail", Storage="_BankDetails", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<BankDetail> BankDetails
		{
			get
			{
				return this._BankDetails;
			}
			set
			{
				this._BankDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LeaderFollower", Storage="_LeaderFollowers", ThisKey="UserID", OtherKey="LeaderID")]
		public EntitySet<LeaderFollower> LeaderFollowers
		{
			get
			{
				return this._LeaderFollowers;
			}
			set
			{
				this._LeaderFollowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LeaderFollower1", Storage="_RealFollowers", ThisKey="UserID", OtherKey="FollowerID")]
		public EntitySet<LeaderFollower> RealFollowers
		{
			get
			{
				return this._RealFollowers;
			}
			set
			{
				this._RealFollowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_User1", ThisKey="CreatedBy", OtherKey="UserID", IsForeignKey=true)]
		public User Creater
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Childrens.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Childrens.Add(this);
						this._CreatedBy = value.UserID;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("Creater");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User1", Storage="_User2", ThisKey="SponserID", OtherKey="UserID", IsForeignKey=true)]
		public User Sponser
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.Followers.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.Followers.Add(this);
						this._SponserID = value.UserID;
					}
					else
					{
						this._SponserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sponser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassUsers(ClassUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ClassUsers(ClassUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_EVouchers(EVoucher entity)
		{
			this.SendPropertyChanging();
			entity.Creator = this;
		}
		
		private void detach_EVouchers(EVoucher entity)
		{
			this.SendPropertyChanging();
			entity.Creator = null;
		}
		
		private void attach_EVouchers1(EVoucher entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_EVouchers1(EVoucher entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Sender = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Sender = null;
		}
		
		private void attach_Transactions1(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Reciever = this;
		}
		
		private void detach_Transactions1(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Reciever = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Creater = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Creater = null;
		}
		
		private void attach_Users1(User entity)
		{
			this.SendPropertyChanging();
			entity.Sponser = this;
		}
		
		private void detach_Users1(User entity)
		{
			this.SendPropertyChanging();
			entity.Sponser = null;
		}
		
		private void attach_BankDetails(BankDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BankDetails(BankDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_LeaderFollowers(LeaderFollower entity)
		{
			this.SendPropertyChanging();
			entity.Leader = this;
		}
		
		private void detach_LeaderFollowers(LeaderFollower entity)
		{
			this.SendPropertyChanging();
			entity.Leader = null;
		}
		
		private void attach_RealFollowers(LeaderFollower entity)
		{
			this.SendPropertyChanging();
			entity.Follower = this;
		}
		
		private void detach_RealFollowers(LeaderFollower entity)
		{
			this.SendPropertyChanging();
			entity.Follower = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classes")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassID;
		
		private System.Nullable<System.DateTime> _ClassCreatedDate;
		
		private System.Nullable<System.DateTime> _ClassBrokenDate;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _ClassType;
		
		private EntitySet<ClassUser> _ClassUsers;
		
		private EntitySet<LeaderFollower> _LeaderFollowers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnClassCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClassCreatedDateChanged();
    partial void OnClassBrokenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClassBrokenDateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnClassTypeChanging(System.Nullable<int> value);
    partial void OnClassTypeChanged();
    #endregion
		
		public Class()
		{
			this._ClassUsers = new EntitySet<ClassUser>(new Action<ClassUser>(this.attach_ClassUsers), new Action<ClassUser>(this.detach_ClassUsers));
			this._LeaderFollowers = new EntitySet<LeaderFollower>(new Action<LeaderFollower>(this.attach_LeaderFollowers), new Action<LeaderFollower>(this.detach_LeaderFollowers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassCreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClassCreatedDate
		{
			get
			{
				return this._ClassCreatedDate;
			}
			set
			{
				if ((this._ClassCreatedDate != value))
				{
					this.OnClassCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._ClassCreatedDate = value;
					this.SendPropertyChanged("ClassCreatedDate");
					this.OnClassCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassBrokenDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClassBrokenDate
		{
			get
			{
				return this._ClassBrokenDate;
			}
			set
			{
				if ((this._ClassBrokenDate != value))
				{
					this.OnClassBrokenDateChanging(value);
					this.SendPropertyChanging();
					this._ClassBrokenDate = value;
					this.SendPropertyChanged("ClassBrokenDate");
					this.OnClassBrokenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassType", DbType="Int")]
		public System.Nullable<int> ClassType
		{
			get
			{
				return this._ClassType;
			}
			set
			{
				if ((this._ClassType != value))
				{
					this.OnClassTypeChanging(value);
					this.SendPropertyChanging();
					this._ClassType = value;
					this.SendPropertyChanged("ClassType");
					this.OnClassTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassUser", Storage="_ClassUsers", ThisKey="ClassID", OtherKey="ClassID")]
		public EntitySet<ClassUser> ClassUsers
		{
			get
			{
				return this._ClassUsers;
			}
			set
			{
				this._ClassUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_LeaderFollower", Storage="_LeaderFollowers", ThisKey="ClassID", OtherKey="LeaderClassID")]
		public EntitySet<LeaderFollower> LeaderFollowers
		{
			get
			{
				return this._LeaderFollowers;
			}
			set
			{
				this._LeaderFollowers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassUsers(ClassUser entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_ClassUsers(ClassUser entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_LeaderFollowers(LeaderFollower entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_LeaderFollowers(LeaderFollower entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankDetails")]
	public partial class BankDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private string _TransferType;
		
		private string _AccType;
		
		private string _AccountName;
		
		private string _AccountNumber;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTransferTypeChanging(string value);
    partial void OnTransferTypeChanged();
    partial void OnAccTypeChanging(string value);
    partial void OnAccTypeChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    #endregion
		
		public BankDetail()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferType", DbType="VarChar(50)")]
		public string TransferType
		{
			get
			{
				return this._TransferType;
			}
			set
			{
				if ((this._TransferType != value))
				{
					this.OnTransferTypeChanging(value);
					this.SendPropertyChanging();
					this._TransferType = value;
					this.SendPropertyChanged("TransferType");
					this.OnTransferTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccType", DbType="VarChar(50)")]
		public string AccType
		{
			get
			{
				return this._AccType;
			}
			set
			{
				if ((this._AccType != value))
				{
					this.OnAccTypeChanging(value);
					this.SendPropertyChanging();
					this._AccType = value;
					this.SendPropertyChanged("AccType");
					this.OnAccTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BankDetail", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BankDetails.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BankDetails.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaderFollower")]
	public partial class LeaderFollower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaderFollowerID;
		
		private System.Nullable<int> _LeaderID;
		
		private System.Nullable<int> _FollowerID;
		
		private System.Nullable<int> _LeaderClassID;
		
		private System.Nullable<System.DateTime> _FollowedDate;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<User> _Leader;
		
		private EntityRef<User> _Follower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaderFollowerIDChanging(int value);
    partial void OnLeaderFollowerIDChanged();
    partial void OnLeaderIDChanging(System.Nullable<int> value);
    partial void OnLeaderIDChanged();
    partial void OnFollowerIDChanging(System.Nullable<int> value);
    partial void OnFollowerIDChanged();
    partial void OnLeaderClassIDChanging(System.Nullable<int> value);
    partial void OnLeaderClassIDChanged();
    partial void OnFollowedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFollowedDateChanged();
    #endregion
		
		public LeaderFollower()
		{
			this._Class = default(EntityRef<Class>);
			this._Leader = default(EntityRef<User>);
			this._Follower = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderFollowerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeaderFollowerID
		{
			get
			{
				return this._LeaderFollowerID;
			}
			set
			{
				if ((this._LeaderFollowerID != value))
				{
					this.OnLeaderFollowerIDChanging(value);
					this.SendPropertyChanging();
					this._LeaderFollowerID = value;
					this.SendPropertyChanged("LeaderFollowerID");
					this.OnLeaderFollowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderID", DbType="Int")]
		public System.Nullable<int> LeaderID
		{
			get
			{
				return this._LeaderID;
			}
			set
			{
				if ((this._LeaderID != value))
				{
					if (this._Leader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaderIDChanging(value);
					this.SendPropertyChanging();
					this._LeaderID = value;
					this.SendPropertyChanged("LeaderID");
					this.OnLeaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowerID", DbType="Int")]
		public System.Nullable<int> FollowerID
		{
			get
			{
				return this._FollowerID;
			}
			set
			{
				if ((this._FollowerID != value))
				{
					if (this._Follower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFollowerIDChanging(value);
					this.SendPropertyChanging();
					this._FollowerID = value;
					this.SendPropertyChanged("FollowerID");
					this.OnFollowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderClassID", DbType="Int")]
		public System.Nullable<int> LeaderClassID
		{
			get
			{
				return this._LeaderClassID;
			}
			set
			{
				if ((this._LeaderClassID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaderClassIDChanging(value);
					this.SendPropertyChanging();
					this._LeaderClassID = value;
					this.SendPropertyChanged("LeaderClassID");
					this.OnLeaderClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FollowedDate
		{
			get
			{
				return this._FollowedDate;
			}
			set
			{
				if ((this._FollowedDate != value))
				{
					this.OnFollowedDateChanging(value);
					this.SendPropertyChanging();
					this._FollowedDate = value;
					this.SendPropertyChanged("FollowedDate");
					this.OnFollowedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_LeaderFollower", Storage="_Class", ThisKey="LeaderClassID", OtherKey="ClassID", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.LeaderFollowers.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.LeaderFollowers.Add(this);
						this._LeaderClassID = value.ClassID;
					}
					else
					{
						this._LeaderClassID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LeaderFollower", Storage="_Leader", ThisKey="LeaderID", OtherKey="UserID", IsForeignKey=true)]
		public User Leader
		{
			get
			{
				return this._Leader.Entity;
			}
			set
			{
				User previousValue = this._Leader.Entity;
				if (((previousValue != value) 
							|| (this._Leader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Leader.Entity = null;
						previousValue.LeaderFollowers.Remove(this);
					}
					this._Leader.Entity = value;
					if ((value != null))
					{
						value.LeaderFollowers.Add(this);
						this._LeaderID = value.UserID;
					}
					else
					{
						this._LeaderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Leader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LeaderFollower1", Storage="_Follower", ThisKey="FollowerID", OtherKey="UserID", IsForeignKey=true)]
		public User Follower
		{
			get
			{
				return this._Follower.Entity;
			}
			set
			{
				User previousValue = this._Follower.Entity;
				if (((previousValue != value) 
							|| (this._Follower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Follower.Entity = null;
						previousValue.RealFollowers.Remove(this);
					}
					this._Follower.Entity = value;
					if ((value != null))
					{
						value.RealFollowers.Add(this);
						this._FollowerID = value.UserID;
					}
					else
					{
						this._FollowerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Follower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class usp_Get_User_List_Order_By_Performance_For_ClassResult
	{
		
		private System.Nullable<int> _UserID;
		
		private string _UserName;
		
		private System.Nullable<int> _Position;
		
		private System.Nullable<int> _FollowerCount;
		
		public usp_Get_User_List_Order_By_Performance_For_ClassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowerCount", DbType="Int")]
		public System.Nullable<int> FollowerCount
		{
			get
			{
				return this._FollowerCount;
			}
			set
			{
				if ((this._FollowerCount != value))
				{
					this._FollowerCount = value;
				}
			}
		}
	}
	
	public partial class usp_Get_All_Evoucher_DetailsResult
	{
		
		private int _EVouchersID;
		
		private string _Username;
		
		private string _RecievedBy;
		
		private string _VoucherCode;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UsedDate;
		
		private System.Nullable<bool> _IsUsed;
		
		public usp_Get_All_Evoucher_DetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EVouchersID", DbType="Int NOT NULL")]
		public int EVouchersID
		{
			get
			{
				return this._EVouchersID;
			}
			set
			{
				if ((this._EVouchersID != value))
				{
					this._EVouchersID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(500)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedBy", DbType="VarChar(500)")]
		public string RecievedBy
		{
			get
			{
				return this._RecievedBy;
			}
			set
			{
				if ((this._RecievedBy != value))
				{
					this._RecievedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="VarChar(MAX)")]
		public string VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
			set
			{
				if ((this._VoucherCode != value))
				{
					this._VoucherCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UsedDate
		{
			get
			{
				return this._UsedDate;
			}
			set
			{
				if ((this._UsedDate != value))
				{
					this._UsedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this._IsUsed = value;
				}
			}
		}
	}
	
	public partial class uspGet_All_TransActionsByUserResult
	{
		
		private int _TransactionID;
		
		private string _SenderName;
		
		private string _RecieverName;
		
		private System.Nullable<double> _Amount;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _TransactionDate;
		
		private string _TransactionType;
		
		public uspGet_All_TransActionsByUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int NOT NULL")]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this._TransactionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderName", DbType="VarChar(500)")]
		public string SenderName
		{
			get
			{
				return this._SenderName;
			}
			set
			{
				if ((this._SenderName != value))
				{
					this._SenderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieverName", DbType="VarChar(500)")]
		public string RecieverName
		{
			get
			{
				return this._RecieverName;
			}
			set
			{
				if ((this._RecieverName != value))
				{
					this._RecieverName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this._TransactionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="VarChar(8)")]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this._TransactionType = value;
				}
			}
		}
	}
	
	public partial class usp_Get_Evoucher_DetailsResult
	{
		
		private int _EVouchersID;
		
		private string _Username;
		
		private string _RecievedBy;
		
		private string _VoucherCode;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UsedDate;
		
		private System.Nullable<bool> _IsUsed;
		
		public usp_Get_Evoucher_DetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EVouchersID", DbType="Int NOT NULL")]
		public int EVouchersID
		{
			get
			{
				return this._EVouchersID;
			}
			set
			{
				if ((this._EVouchersID != value))
				{
					this._EVouchersID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(500)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedBy", DbType="VarChar(500)")]
		public string RecievedBy
		{
			get
			{
				return this._RecievedBy;
			}
			set
			{
				if ((this._RecievedBy != value))
				{
					this._RecievedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="VarChar(MAX)")]
		public string VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
			set
			{
				if ((this._VoucherCode != value))
				{
					this._VoucherCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UsedDate
		{
			get
			{
				return this._UsedDate;
			}
			set
			{
				if ((this._UsedDate != value))
				{
					this._UsedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this._IsUsed = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
